[package]
name = "slint-mcu-rust-template"
version = "0.1.0"
edition = "2021"
build = "build.rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
name = "lib"

[dependencies]
slint = { version = "1.7", default-features = false, features = ["compat-1-2", "renderer-software"] }

# for the rp-pico, replace by the hal for your crate
rp-pico = { version = "0.9.0", optional = true }
rp2040-hal = { version = "0.10.2", optional = true }
pio-proc = { version = "0.2.2", optional = true }
pio = { version = "0.2.1", optional = true }
cortex-m = { version = "0.7.6", optional = true }
cortex-m-rt = {version = "0.7.1", optional = true }
embedded-alloc = { version = "0.6.0", optional = true }
embedded-graphics = { version = "0.8.1", optional = true }
embedded-graphics-core = { version = "0.4.0", optional = true }
embedded-hal = {version = "1.0.0", optional = true }
display-interface = {version = "0.5.0", optional = true }
fugit = {version = "0.3.6", optional = true }
# display-interface-parallel-gpio = { version = "0.7.0", optional = true}
# mipidsi = { version = "0.8.0", optional = true }
defmt = { version = "0.3", optional = true }
defmt-rtt = { version = "0.4", optional = true }
panic-halt = { version = "0.2.0", optional = true }
panic-probe = { version = "0.3", features = ["print-defmt"], optional = true}
# fugit = { version = "0.3.6", optional = true }
# shared-bus = { version = "0.2.4", optional = true }

[build-dependencies]
slint-build = { version = "1.7" }


[features]
simulator = ["slint/backend-winit"]
pico = [
    "slint/unsafe-single-threaded",
    "slint/libm",
    "rp-pico",
    "rp2040-hal",
    "pio-proc",
    "pio",
    "defmt",
    "defmt-rtt",
    "cortex-m",
    "cortex-m-rt",
    "embedded-alloc",
    "embedded-hal",
    "embedded-graphics",
    "embedded-graphics-core",
    "display-interface",
    # "display-interface-parallel-gpio",
    # "mipidsi",
    "panic-halt",
    "panic-probe",
    "fugit",
    # "shared-bus",
]

